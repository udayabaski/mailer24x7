<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">


	<!--<tx:jta-transaction-manager/> -->

	<tx:annotation-driven transaction-manager="dataSourceTransactionManager"
		mode="proxy" />

	<!-- Declare a transaction manager -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/transaction.html -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="com.nervytech.mailer24x7">
		<context:include-filter type="regex"
			expression="(service|constroller|resource)\..*" />
	</context:component-scan>


	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<!-- For Schedule Tasks -->
	<!-- <task:annotation-driven/> -->

	<bean id="applicationProperty"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		   <value>classpath:scheduler.properties</value>
		</property>
	</bean>
	
	<util:properties id="applicationProps" location="classpath:scheduler.properties"/>
	

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages" />
	</bean>

	<jee:jndi-lookup id="dataSource1" jndi-name="java:comp/env/jdbc/MySQLDS" />

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/mailer24x7" />
		<property name="username" value="root" />
		<property name="password" value="vani1982" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes (i.e 
			- 300kb) -->
		<property name="maxUploadSize" value="-1" />
	</bean>

	<bean id="campaignDAO" class="com.nervytech.mailer24x7.model.dao.impl.CampaignDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="campaignSenderDAO" class="com.nervytech.mailer24x7.model.dao.impl.CampaignSenderDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="campaignStatusDAO" class="com.nervytech.mailer24x7.model.dao.impl.CampaignStatusDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="countryMapDAO" class="com.nervytech.mailer24x7.model.dao.impl.CountryMapDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="organizationDAO" class="com.nervytech.mailer24x7.model.dao.impl.OrganizationDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="subscriberIdStatusDAO" class="com.nervytech.mailer24x7.model.dao.impl.SubscriberIdStatusDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="subscriberListDAO" class="com.nervytech.mailer24x7.model.dao.impl.SubscriberListDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	
	<bean id="subscriberReportsDAO" class="com.nervytech.mailer24x7.model.dao.impl.SubscriberReportsDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="userDAO" class="com.nervytech.mailer24x7.model.dao.impl.UserDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="userSessionDAO" class="com.nervytech.mailer24x7.model.dao.impl.UserSessionDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="userUuidDAO" class="com.nervytech.mailer24x7.model.dao.impl.UserUuidDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="historyDAO" class="com.nervytech.mailer24x7.model.dao.impl.HistoryDAO">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="mailgunCampignSyncer" class="com.nervytech.mailer24x7.mailgun.MailgunCampignSyncer" />
	<bean id="campaignTaskExecutor"
		class="com.nervytech.mailer24x7.campaign.job.task.CampaignTaskExecutor" />

	<bean id="twelveHoursCampaignStatsSyncTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="15" />
		<property name="maxPoolSize" value="40" />
		<property name="queueCapacity" value="50000" />
	</bean>

	<bean id="biHourlyCampaignStatsSyncTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="15" />
		<property name="maxPoolSize" value="30" />
		<property name="queueCapacity" value="20000" />
	</bean>

	<bean id="campaignLaterTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="100" />
	</bean>

	<bean id="campaignNowTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="${time}" />
	</bean>

	<!-- Scheduler Configuration Starts here ..... -->

	<bean id="campaignNowJob"
		class="com.nervytech.mailer24x7.campaign.job.scheduler.CampaignNowJob">
		<constructor-arg ref="campaignNowTaskExecutor" />
	</bean>

	<bean id="campaignLaterJob"
		class="com.nervytech.mailer24x7.campaign.job.scheduler.CampaignLaterJob">
		<constructor-arg ref="campaignLaterTaskExecutor" />
	</bean>


	<bean id="biHourCampaignStatsSyncJob"
		class="com.nervytech.mailer24x7.campaign.job.scheduler.BiHourlyCampaignStatsSyncJob">
		<constructor-arg ref="biHourlyCampaignStatsSyncTaskExecutor" />
	</bean>

	<bean id="twelveHoursCampaignStatsSyncJob"
		class="com.nervytech.mailer24x7.campaign.job.scheduler.TwelveHoursCampaignStatsSyncJob">
		<constructor-arg ref="twelveHoursCampaignStatsSyncTaskExecutor" />
	</bean>

	<bean id="campaignLaterJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="campaignLaterJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="campaignNowJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="campaignNowJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="biHoursCampaignStatsSyncJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="biHourCampaignStatsSyncJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="twelveHoursCampaignStatsSyncJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="twelveHoursCampaignStatsSyncJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="campaignLaterTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="campaignLaterJobDetail" />
		<!-- 90 seconds -->
		<property name="startDelay" value="6000" />
		<!-- repeat every 90 seconds -->
		<property name="repeatInterval" value="90000" />
	</bean>

	<bean id="campaignNowTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="campaignNowJobDetail" />
		<!-- 60 seconds -->
		<property name="startDelay" value="5000" />
		<!-- repeat every 90 seconds -->
		<property name="repeatInterval" value="20000" />
	</bean>

	<bean id="biHoursCampaignStatsSyncTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="biHoursCampaignStatsSyncJobDetail" />
		<!-- 120 seconds -->
		<property name="startDelay" value="5000" />
		<!-- repeat every 90 seconds -->
		<property name="repeatInterval" value="50000" />
	</bean>

	<bean id="twelveHoursCampaignStatsSyncTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="twelveHoursCampaignStatsSyncJobDetail" />
		<!-- 120 seconds -->
		<property name="startDelay" value="6000" />
		<!-- repeat every 90 seconds -->
		<property name="repeatInterval" value="90000" />
	</bean>

	<!-- <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
		<property name="jobDetail" ref="exampleJob" /> run every morning at 6 AM 
		<property name="cronExpression" value="0 0 6 * * ?" /> </bean> -->

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!-- <ref bean="cronTrigger" /> -->
				<ref bean="campaignNowTrigger" />
				<ref bean="campaignLaterTrigger" />
				<ref bean="biHoursCampaignStatsSyncTrigger" />
				<ref bean="twelveHoursCampaignStatsSyncTrigger" />
			</list>
		</property>
		<!-- <property name="dataSource" ref="dataSource"/> <property name="quartzProperties"> 
			<props> <prop key="org.quartz.scheduler.instanceName">MailerClusteredScheduler</prop> 
			<prop key="org.quartz.scheduler.instanceId">AUTO</prop> <prop key="org.quartz.jobStore.misfireThreshold">60000</prop> 
			<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop> 
			<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop> 
			<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop> <prop key="org.quartz.jobStore.isClustered">true</prop> 
			<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop> <prop 
			key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop> 
			<prop key="org.quartz.threadPool.threadCount">20</prop> <prop key="org.quartz.threadPool.threadPriority">5</prop> 
			<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS 
			UPDLOCK WHERE LOCK_NAME = ?</prop> <prop key="org.quartz.jobStore.nonManagedTXDataSource">NON_MANAGED_TX_DS_NAME</prop> 
			</props> </property> -->
	</bean>
	<!-- Scheduler Configuration Ends here ... -->

	<util:map id="roleDropDown">
		<entry key="" value="Select" />
		<entry key="0" value="USER" />
		<entry key="1" value="ADMIN" />
	</util:map>

	<util:map id="countryDropDown">
		<entry key="" value="Select" />
		<entry key="India" value="India" />
		<entry key="USA" value="USA" />
		<entry key="UK" value="UK" />
		<entry key="Germany" value="Germany" />
	</util:map>

</beans>
